// OUTPUT
console.log("Hello World");

// INPUT

// for browser
prompt("Please enter your input:"); 

// for node js with 'npm i readline-sync'
const readlineSync = require('readline-sync');
let userInput = readlineSync.question('Please enter your input: ');

// DATA TYPES
Number 25, 2.55
String "Hello', 'World', `Bye ${userInput}`
Boolean true, false
Undefined let something;
Null let nothing = null;
Object user = {name:'John', age:25}

// VARIABLES
let userName = "Alice";
let userAge = 25;
let isUserLoggedIn = true;
const MAX_RETRIES = 5;
const max_retries = 7; // different as Case sensitive

-- VAR v/s LET v/s CONST --
function example() {
   var x = 10; // function-scoped
   let y = 20; // block-scoped
   const z = 30; // block-scoped, cannot be reassigned

   if (true) {
      let y = 40; // block-scoped within the if statement
      console.log(x); // 10
      console.log(y); // 40
      // z = 40; // Error: Assignment to constant variable
   }
   console.log(y); // 20
   console.log(x); // 10
   // z = 40; // Error: Assignment to constant variable
}

// OPERATORS

Arithmetic Operators:

+ (Addition), - (Subtraction), * (Multiplication), / (Division), % (Modulus), ** (Exponentiation)

Comparison Operators:

== (Equal to), != (Not equal to), === (Strict equal to), !== (Strict not equal to), > (Greater than), < (Less than), >= (Greater than or equal to), <= (Less than or equal to)

Logical Operators:

&& (Logical AND), || (Logical OR), ! (Logical NOT)

Assignment Operators:

= (Assign), +=, -=, *=, /=, %=, **= (Modify and assign)

Bitwise Operators:

& (AND), | (OR), ^ (XOR), ~ (NOT), << (Left shift), >> (Right shift), >>> (Zero-fill right shift)

Type Operators:

typeof (Type of), instanceof (Instance of)

Nullish Coalescing Operator:

?? (Nullish Coalescing)

Optional Chaining Operator:

?. (Optional Chaining)
